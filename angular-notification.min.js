/*! Angular notification v0.2.3 | (c) 2013 Greg Berg√© | License MIT */
function NotificationProvider(){function a(a,c){function d(c,f){function g(){if(f=angular.extend({focusWindowOnClick:!0},b.options||{},f),f.tag){if(e[f.tag])return e[f.tag];e[f.tag]=h,h.$on("close",function(){delete e[f.tag]})}h.baseNotification=new a.Notification(c,f),f.delay&&setTimeout(angular.bind(h,h.close),f.delay),f.focusWindowOnClick&&h.$on("click",function(){a.focus()}),h._events.forEach(function(a){h.$on.apply(h,a)}),h._events=[]}if(!a.Notification)return!1;f=f||{};var h=this;return this._events=[],"granted"===a.Notification.permission?g():void("denied"!==a.Notification.permission&&d.requestPermission(g))}var e={};return d.prototype.$on=function(a,b){function d(){var a=arguments;c.$apply(function(){b.apply(e,a)})}var e=this;return this.baseNotification?(this.baseNotification.addEventListener(a,d),function(){this.baseNotification.removeListener(event,d)}):this._events.push([a,b])},d.prototype.close=function(){this.baseNotification&&this.baseNotification.close()},d.requestPermission=function(b){return a.Notification?void a.Notification.requestPermission(function(c){a.Notification.permission=a.Notification.permission||c,b&&b(c)}):!1},d}var b=this;this.$get=["$window","$rootScope",a],this.setOptions=function(a){this.options=a}}angular.module("notification",[]).provider("Notification",NotificationProvider);
//# sourceMappingURL=angular-notification.min.map